name: build

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  push:
    tags: [ 'v*.*.*' ]


env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}


jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2.1.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4.3.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4.0.0
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  migrations:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Apply migrations
        uses: ./.github/actions/db_migrations
        with:
          db-connection: postgres://${{ secrets.DB_USER }}:${{ secrets.DB_PASSWORD }}@${{ secrets.DB_HOST }}:${{ secrets.DB_PORT }}/${{ secrets.DB_NAME }}
          source: file://db/migrations
  deploy:
    needs: [build, migrations]
    runs-on: ubuntu-latest
    permissions:
      packages: read

    steps:
      - name: Deploy to server
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.DEPLOY_SSH_HOST }}
          username: ${{ secrets.DEPLOY_SSH_USER }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          script_stop: true
          script: |
            echo "${{ secrets.GITHUB_TOKEN }}" | docker login ${{ env.REGISTRY }} --username ${{ github.actor }} --password-stdin
            docker pull ${{ env.REGISTRY }}/mo3golom/jobinterviewcoachai:${{ github.sha }}x
            docker stop ${{ env.APP_NAME }} || true && docker rm ${{ env.APP_NAME }} || true
            docker system prune -f
            docker run -d --name=${{ env.APP_NAME }} ${{ env.REGISTRY }}/mo3golom/jobinterviewcoachai:${{ github.sha }} \ 
            -e ENV=${{ env.APP_NEV }} \
            -e GPT_API_KEY='${{ secrets.GPT_API_KEY }}' \
            -e DB_USER='${{ secrets.DB_USER }}' \
            -e DB_PASSWORD='${{ secrets.DB_PASSWORD }}' \
            -e DB_HOST='${{ secrets.DB_HOST }}' \
            -e DB_PORT='${{ secrets.DB_PORT }}' \
            -e DB_NAME='${{ secrets.DB_NAME }}' \
            -e TG_BOT_TOKEN='${{ secrets.TG_BOT_TOKEN }}' \
            docker logout ${{ env.REGISTRY }}
