name: build-2

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  push:
    branch: ["main"]


env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  APP_NAME: JOB_INTERVIEWER
  APP_ENV: prod
  REMOTE_ENV_PATH: deployment/.env


jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      packages: read

    steps:
      - name: Make envfile
        uses: SpicyPizza/create-envfile@v1.3
        with:
          envkey_ENV: ${{ env.APP_ENV }}
          envkey_GPT_API_KEY: ${{ secrets.GPT_API_KEY }}
          envkey_DB_USER: ${{ secrets.DB_USER }}
          envkey_DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          envkey_DB_HOST: ${{ secrets.DB_HOST }}
          envkey_DB_PORT: ${{ secrets.DB_PORT }}
          envkey_DB_NAME: ${{ secrets.DB_NAME }}
          envkey_TG_BOT_TOKEN: ${{ secrets.TG_BOT_TOKEN }}
          directory: .
          file_name: .env
          fail_on_empty: false
      - name: Copy folder content recursively to remote
        uses: garygrossgarten/github-action-scp@release
        with:
          local: ./.env
          remote: ${{ env.REMOTE_ENV_PATH }}
          host: ${{ secrets.DEPLOY_SSH_HOST }}
          username: ${{ secrets.DEPLOY_SSH_USER }}
          privateKey: ${{ secrets.DEPLOY_SSH_KEY }}
      - name: Deploy to server
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.DEPLOY_SSH_HOST }}
          username: ${{ secrets.DEPLOY_SSH_USER }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          script_stop: true
          script: |
            echo "${{ secrets.GITHUB_TOKEN }}" | docker login ${{ env.REGISTRY }} --username ${{ github.actor }} --password-stdin
            docker pull ${{ env.REGISTRY }}/mo3golom/jobinterviewcoachai:latest
            docker stop ${{ env.APP_NAME }} || true && docker rm ${{ env.APP_NAME }} || true
            docker system prune -f
            docker run -d --name=${{ env.APP_NAME }} --env-file=${{ env.REMOTE_ENV_PATH }} ${{ env.REGISTRY }}/mo3golom/jobinterviewcoachai:latest
            docker logs ${{ env.APP_NAME }}
            docker logout ${{ env.REGISTRY }}
